/* tslint:disable */
/* eslint-disable */
/**
 * Dropsigner
 * <!--------------------------------------------------------------------------------------------------------------------->    <h2>Authentication</h2>    <p>   In order to call this APIs, you will need an <strong>API key</strong>. Set the API key in the header <span class=\"code\">X-Api-Key</span>:  </p>    <pre>X-Api-Key: your-app|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</pre>    <!--------------------------------------------------------------------------------------------------------------------->  <br />    <h2>HTTP Codes</h2>    <p>   The APIs will return the following HTTP codes:  </p>    <table>   <thead>    <tr>     <th>Code</th>     <th>Description</th>    </tr>   </thead>   <tbody>    <tr>     <td><strong class=\"model-title\">200 (OK)</strong></td>     <td>Request processed successfully. The response is different for each API, please refer to the operation's documentation</td>    </tr>    <tr>     <td><strong class=\"model-title\">400 (Bad Request)</strong></td>     <td>Syntax error. For instance, when a required field was not provided</td>    </tr>    <tr>     <td><strong class=\"model-title\">401 (Unauthorized)</strong></td>     <td>API key not provided or invalid</td>    </tr>    <tr>     <td><strong class=\"model-title\">403 (Forbidden)</strong></td>     <td>API key is valid, but the application has insufficient permissions to complete the requested operation</td>    </tr>    <tr>     <td><strong class=\"model-title\">422 (Unprocessable Entity)</strong></td>     <td>API error. The response is as defined in <a href=\"#model-ErrorModel\">ErrorModel</a></td>    </tr>   </tbody>  </table>    <br />    <h3>Error Codes</h3>    <p>Some of the error codes returned in a 422 response are provided bellow*:</p>    <ul>   <li>CertificateNotFound</li>   <li>DocumentNotFound</li>   <li>FolderNotFound</li>   <li>CpfMismatch</li>   <li>CpfNotExpected</li>   <li>InvalidFlowAction</li>   <li>DocumentInvalidKey</li>  </ul>    <p style=\"font-size: 0.9em\">   *The codes shown above are the main error codes. Nonetheless, this list is not comprehensive. New codes may be added anytime without previous warning.  </p>    <!--------------------------------------------------------------------------------------------------------------------->    <br />    <h2>Webhooks</h2>    <p>   It is recomended to subscribe to Webhook events <strong>instead</strong> of polling APIs. To do so, enable webhooks and register an URL that will receive a POST request   whenever one of the events bellow occur.  </p>  <p>   All requests have the format described in <a href=\"#model-Webhooks.WebhookModel\">Webhooks.WebhookModel</a>.   The data field varies according to the webhook event type:  </p>      <table>   <thead>    <tr>     <th>Event type</th>     <th>Description</th>     <th>Payload</th>    </tr>   </thead>   <tbody>    <tr>     <td><strong class=\"model-title\">DocumentSigned</strong></td>     <td>Triggered when a document is signed.</td>     <td><a href=\"#model-Webhooks.DocumentSignedModel\">Webhooks.DocumentSignedModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentApproved</strong></td>     <td>Triggered when a document is approved.</td>     <td><a href=\"#model-Webhooks.DocumentApprovedModel\">Webhooks.DocumentApprovedModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentRefused</strong></td>     <td>Triggered when a document is refused.</td>     <td><a href=\"#model-Webhooks.DocumentRefusedModel\">Webhooks.DocumentRefusedModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentConcluded</strong></td>     <td>Triggered when the flow of a document is concluded.</td>     <td><a href=\"#model-Webhooks.DocumentConcludedModel\">Webhooks.DocumentConcludedModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentCanceled</strong></td>     <td>Triggered when the document is canceled.</td>     <td><a href=\"#model-Webhooks.DocumentCanceledModel\">Webhooks.DocumentCanceledModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentsCreated (v1.50.0)</strong></td>     <td>Triggered when one or more documents are created.</td>     <td><a href=\"#model-Webhooks.DocumentsCreatedModel\">Webhooks.DocumentsCreatedModel</a></td>    </tr>   </tbody>  </table>    <p>   To register your application URL and enable Webhooks, access the integrations section in your <a href=\"/private/organizations\" target=\"_blank\">organization's details page</a>.  </p>  
 *
 * OpenAPI spec version: 1.55.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AgentsAgentModel } from './agents-agent-model';
import { AttachmentsAttachmentModel } from './attachments-attachment-model';
import { DocumentStatus } from './document-status';
import { DocumentsCreatorModel } from './documents-creator-model';
import { DocumentsDocumentPermissionsModel } from './documents-document-permissions-model';
import { DocumentsDocumentTagModel } from './documents-document-tag-model';
import { FlowActionsFlowActionModel } from './flow-actions-flow-action-model';
import { FoldersFolderInfoModel } from './folders-folder-info-model';
import { ObserversObserverModel } from './observers-observer-model';
import { OrganizationsOrganizationInfoModel } from './organizations-organization-info-model';
/**
 * 
 * @export
 * @interface DocumentsDocumentModel
 */
export interface DocumentsDocumentModel {
    /**
     * MD5 checksum of the document's file.
     * @type {string}
     * @memberof DocumentsDocumentModel
     */
    checksumMd5?: string | null;
    /**
     * True if the document is deleted.
     * @type {boolean}
     * @memberof DocumentsDocumentModel
     */
    isDeleted?: boolean;
    /**
     * Signers and approvers of the document.
     * @type {Array<FlowActionsFlowActionModel>}
     * @memberof DocumentsDocumentModel
     */
    flowActions?: Array<FlowActionsFlowActionModel> | null;
    /**
     * Observers of the document.
     * @type {Array<ObserversObserverModel>}
     * @memberof DocumentsDocumentModel
     */
    observers?: Array<ObserversObserverModel> | null;
    /**
     * Document attachments
     * @type {Array<AttachmentsAttachmentModel>}
     * @memberof DocumentsDocumentModel
     */
    attachments?: Array<AttachmentsAttachmentModel> | null;
    /**
     * 
     * @type {DocumentsDocumentPermissionsModel}
     * @memberof DocumentsDocumentModel
     */
    permissions?: DocumentsDocumentPermissionsModel;
    /**
     * 
     * @type {Array<string>}
     * @memberof DocumentsDocumentModel
     */
    notifiedEmails?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentsDocumentModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentsDocumentModel
     */
    name?: string | null;
    /**
     * The document's file name.
     * @type {string}
     * @memberof DocumentsDocumentModel
     */
    filename?: string | null;
    /**
     * The document's file size in bytes.
     * @type {number}
     * @memberof DocumentsDocumentModel
     */
    fileSize?: number;
    /**
     * The document's file mime type.
     * @type {string}
     * @memberof DocumentsDocumentModel
     */
    mimeType?: string | null;
    /**
     * True if the document was already signed once.
     * @type {boolean}
     * @memberof DocumentsDocumentModel
     */
    hasSignature?: boolean;
    /**
     * 
     * @type {DocumentStatus}
     * @memberof DocumentsDocumentModel
     */
    status?: DocumentStatus;
    /**
     * [DEPRECATED] True if all actions requested in the document are concluded. Please use Lacuna.Signer.Api.Documents.DocumentInfoModel.Status instead.
     * @type {boolean}
     * @memberof DocumentsDocumentModel
     */
    isConcluded?: boolean;
    /**
     * 
     * @type {FoldersFolderInfoModel}
     * @memberof DocumentsDocumentModel
     */
    folder?: FoldersFolderInfoModel;
    /**
     * 
     * @type {OrganizationsOrganizationInfoModel}
     * @memberof DocumentsDocumentModel
     */
    organization?: OrganizationsOrganizationInfoModel;
    /**
     * The date the document was created.
     * @type {Date}
     * @memberof DocumentsDocumentModel
     */
    creationDate?: Date;
    /**
     * The date of the last update to the document. This includes the following actions: moving to folder, signing, approving, deleting and editing the flow.
     * @type {Date}
     * @memberof DocumentsDocumentModel
     */
    updateDate?: Date;
    /**
     * The expiration date of the document in the default timezone.
     * @type {Date}
     * @memberof DocumentsDocumentModel
     */
    expirationDate?: Date | null;
    /**
     * The expiration date without time: in yyyy-MM-dd format (useful for display purposes).
     * @type {string}
     * @memberof DocumentsDocumentModel
     */
    expirationDateWithoutTime?: string | null;
    /**
     * 
     * @type {DocumentsCreatorModel}
     * @memberof DocumentsDocumentModel
     */
    createdBy?: DocumentsCreatorModel;
    /**
     * 
     * @type {string}
     * @memberof DocumentsDocumentModel
     */
    description?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentsDocumentModel
     */
    forceCadesSignature?: boolean;
    /**
     * True if the document source was a scanning process.
     * @type {boolean}
     * @memberof DocumentsDocumentModel
     */
    isScanned?: boolean;
    /**
     * True if the document is an envelope (Lacuna.Signer.Api.Documents.CreateDocumentRequest.IsEnvelope).
     * @type {boolean}
     * @memberof DocumentsDocumentModel
     */
    isEnvelope?: boolean;
    /**
     * 
     * @type {AgentsAgentModel}
     * @memberof DocumentsDocumentModel
     */
    statusUpdatedBy?: AgentsAgentModel;
    /**
     * The reason for the status update (see \"StatusUpdatedBy\" property).
     * @type {string}
     * @memberof DocumentsDocumentModel
     */
    statusUpdateReason?: string | null;
    /**
     * 
     * @type {Array<DocumentsDocumentTagModel>}
     * @memberof DocumentsDocumentModel
     */
    tags?: Array<DocumentsDocumentTagModel> | null;
}
