/**
 * Dropsigner
 * <!--------------------------------------------------------------------------------------------------------------------->    <h2>Authentication</h2>    <p>   In order to call this APIs, you will need an <strong>API key</strong>. Set the API key in the header <span class=\"code\">X-Api-Key</span>:  </p>    <pre>X-Api-Key: your-app|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</pre>    <!--------------------------------------------------------------------------------------------------------------------->  <br />    <h2>HTTP Codes</h2>    <p>   The APIs will return the following HTTP codes:  </p>    <table>   <thead>    <tr>     <th>Code</th>     <th>Description</th>    </tr>   </thead>   <tbody>    <tr>     <td><strong class=\"model-title\">200 (OK)</strong></td>     <td>Request processed successfully. The response is different for each API, please refer to the operation's documentation</td>    </tr>    <tr>     <td><strong class=\"model-title\">400 (Bad Request)</strong></td>     <td>Syntax error. For instance, when a required field was not provided</td>    </tr>    <tr>     <td><strong class=\"model-title\">401 (Unauthorized)</strong></td>     <td>API key not provided or invalid</td>    </tr>    <tr>     <td><strong class=\"model-title\">403 (Forbidden)</strong></td>     <td>API key is valid, but the application has insufficient permissions to complete the requested operation</td>    </tr>    <tr>     <td><strong class=\"model-title\">422 (Unprocessable Entity)</strong></td>     <td>API error. The response is as defined in <a href=\"#model-ErrorModel\">ErrorModel</a></td>    </tr>   </tbody>  </table>    <br />    <h3>Error Codes</h3>    <p>Some of the error codes returned in a 422 response are provided bellow*:</p>    <ul>   <li>CertificateNotFound</li>   <li>DocumentNotFound</li>   <li>FolderNotFound</li>   <li>CpfMismatch</li>   <li>CpfNotExpected</li>   <li>InvalidFlowAction</li>   <li>DocumentInvalidKey</li>  </ul>    <p style=\"font-size: 0.9em\">   *The codes shown above are the main error codes. Nonetheless, this list is not comprehensive. New codes may be added anytime without previous warning.  </p>    <!--------------------------------------------------------------------------------------------------------------------->    <br />    <h2>Webhooks</h2>    <p>   It is recomended to subscribe to Webhook events <strong>instead</strong> of polling APIs. To do so, enable webhooks and register an URL that will receive a POST request   whenever one of the events bellow occur.  </p>  <p>   All requests have the format described in <a href=\"#model-Webhooks.WebhookModel\">Webhooks.WebhookModel</a>.   The data field varies according to the webhook event type:  </p>      <table>   <thead>    <tr>     <th>Event type</th>     <th>Description</th>     <th>Payload</th>    </tr>   </thead>   <tbody>    <tr>     <td><strong class=\"model-title\">DocumentSigned</strong></td>     <td>Triggered when a document is signed.</td>     <td><a href=\"#model-Webhooks.DocumentSignedModel\">Webhooks.DocumentSignedModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentApproved</strong></td>     <td>Triggered when a document is approved.</td>     <td><a href=\"#model-Webhooks.DocumentApprovedModel\">Webhooks.DocumentApprovedModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentRefused</strong></td>     <td>Triggered when a document is refused.</td>     <td><a href=\"#model-Webhooks.DocumentRefusedModel\">Webhooks.DocumentRefusedModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentConcluded</strong></td>     <td>Triggered when the flow of a document is concluded.</td>     <td><a href=\"#model-Webhooks.DocumentConcludedModel\">Webhooks.DocumentConcludedModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentCanceled</strong></td>     <td>Triggered when the document is canceled.</td>     <td><a href=\"#model-Webhooks.DocumentCanceledModel\">Webhooks.DocumentCanceledModel</a></td>    </tr>    <tr>     <td><strong class=\"model-title\">DocumentsCreated (v1.50.0)</strong></td>     <td>Triggered when one or more documents are created.</td>     <td><a href=\"#model-Webhooks.DocumentsCreatedModel\">Webhooks.DocumentsCreatedModel</a></td>    </tr>   </tbody>  </table>    <p>   To register your application URL and enable Webhooks, access the integrations section in your <a href=\"/private/organizations\" target=\"_blank\">organization's details page</a>.  </p>
 *
 * OpenAPI spec version: 1.55.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { NotificationsCreateFlowActionReminderRequest } from '../models';
import { NotificationsEmailListNotificationRequest } from '../models';
/**
 * NotificationsApi - axios parameter creator
 * @export
 */
export declare const NotificationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Sends a reminder email to the user of a flow action. (if the action is pending)
     * @param {NotificationsCreateFlowActionReminderRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiNotificationsFlowActionReminderPost: (body?: NotificationsCreateFlowActionReminderRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Sends a reminder email to the e-mails provided on request. Should be used after creating a batch of documents.
     * @param {NotificationsEmailListNotificationRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiUsersNotifyPendingPost: (body?: NotificationsEmailListNotificationRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NotificationsApi - functional programming interface
 * @export
 */
export declare const NotificationsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Sends a reminder email to the user of a flow action. (if the action is pending)
     * @param {NotificationsCreateFlowActionReminderRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiNotificationsFlowActionReminderPost(body?: NotificationsCreateFlowActionReminderRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     *
     * @summary Sends a reminder email to the e-mails provided on request. Should be used after creating a batch of documents.
     * @param {NotificationsEmailListNotificationRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiUsersNotifyPendingPost(body?: NotificationsEmailListNotificationRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
};
/**
 * NotificationsApi - factory interface
 * @export
 */
export declare const NotificationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Sends a reminder email to the user of a flow action. (if the action is pending)
     * @param {NotificationsCreateFlowActionReminderRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiNotificationsFlowActionReminderPost(body?: NotificationsCreateFlowActionReminderRequest, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Sends a reminder email to the e-mails provided on request. Should be used after creating a batch of documents.
     * @param {NotificationsEmailListNotificationRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiUsersNotifyPendingPost(body?: NotificationsEmailListNotificationRequest, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
};
/**
 * NotificationsApi - object-oriented interface
 * @export
 * @class NotificationsApi
 * @extends {BaseAPI}
 */
export declare class NotificationsApi extends BaseAPI {
    /**
     *
     * @summary Sends a reminder email to the user of a flow action. (if the action is pending)
     * @param {NotificationsCreateFlowActionReminderRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificationsApi
     */
    apiNotificationsFlowActionReminderPost(body?: NotificationsCreateFlowActionReminderRequest, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Sends a reminder email to the e-mails provided on request. Should be used after creating a batch of documents.
     * @param {NotificationsEmailListNotificationRequest} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificationsApi
     */
    apiUsersNotifyPendingPost(body?: NotificationsEmailListNotificationRequest, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
}
